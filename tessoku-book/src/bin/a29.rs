use proconio::input;

fn main() {
    input! {
        a: usize,
        b: usize,
    };

    let div = 1000000007;
    let mut ans = 1;
    let mut v = a;
    // 30はbの制約。loopの回数が多くても、必要な回数しかb/dの分岐に入らない
    for i in 0..30 {
        // a^1 * a^10 でa^11を求めるように、bを分けて計算している
        // 2^iの位が1のときに限り、a^(2^i)が掛け算の式に含まれる
        // 例として42は101010だが、2,8,32の位だけが1になっている。2進数と十進数の変換を考えたら当たり前じゃったわ
        let d = 1 << i;
        // このわり算はbの2進数表記で、1になっている桁かどうかを判定している
        if (b / d) % 2 == 1 {
            ans = (ans * v) % div;
        }
        // ここがa^1 -> a^2 -> a^4 のように増えていく。最終的に肩の値がbになるようなa^nを選んで、ansに足していくというわけ
        v = (v * v) % div;
    }

    println!("{}", ans);
}
